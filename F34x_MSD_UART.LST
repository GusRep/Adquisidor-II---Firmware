C51 COMPILER V8.02   F34X_MSD_UART                 07/24/2007 22:07:38 PAGE 1   


C51 COMPILER V8.02, COMPILATION OF MODULE F34X_MSD_UART
OBJECT MODULE PLACED IN F34x_MSD_UART.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\c51.exe F34x_MSD_UART.c PW(80) SB LC OT(9,S
                    -IZE) CD DB OE DF(__F340_VER__) LARGE

line level    source

   1          //----------------------------------------------------------------
             --------------
   2          // F34x_MSD_UART.c
   3          //----------------------------------------------------------------
             --------------
   4          // Copyright 2006 Silicon Laboratories, Inc.
   5          // http://www.silabs.com
   6          //
   7          // Program Description:
   8          //
   9          // File contains initialization functions for UART interface.
  10          //
  11          //
  12          //
  13          // How To Test:    See Readme.txt
  14          //
  15          //
  16          // FID:            34X000057
  17          // Target:         C8051F34x
  18          // Tool chain:     Keil
  19          // Command Line:   See Readme.txt
  20          // Project Name:   F34x_USB_MSD
  21          //
  22          // Release 1.1
  23          //    -All changes by PKC
  24          //    -09 JUN 2006
  25          //    -Replaced SFR definitions file "c8051f320.h" with "c8051f340
             -.h"
  26          //
  27          // Release 1.0
  28          //    -Initial Release
  29          //
  30          
  31          //----------------------------------------------------------------
             --------------
  32          // Includes
  33          //----------------------------------------------------------------
             --------------
  34          
  35          #include "F34x_MSD_Definitions.h"
   1      =1  //----------------------------------------------------------------
             --------------
   2      =1  // F34x_MSD_Definitions.h
   3      =1  //----------------------------------------------------------------
             --------------
   4      =1  // Copyright 2006 Silicon Laboratories, Inc.
   5      =1  // http://www.silabs.com
   6      =1  //
   7      =1  // Program Description:
   8      =1  //
   9      =1  // Header file with all definitions.
  10      =1  //
  11      =1  //
  12      =1  // FID:            34X000032
C51 COMPILER V8.02   F34X_MSD_UART                 07/24/2007 22:07:38 PAGE 2   

  13      =1  // Target:         C8051F34x
  14      =1  // Tool chain:     Keil
  15      =1  // Command Line:   See Readme.txt
  16      =1  // Project Name:   F34x_USB_MSD
  17      =1  //
  18      =1  // Release 1.1
  19      =1  //    -All changes by PKC
  20      =1  //    -09 JUN 2006
  21      =1  //    -Replaced SFR definitions file "c8051f320.h" with "c8051f340
             -.h"
  22      =1  //
  23      =1  // Release 1.0
  24      =1  //    -Initial Release
  25      =1  //
  26      =1  
  27      =1  //----------------------------------------------------------------
             --------------
  28      =1  // Header File Preprocessor Directive
  29      =1  //----------------------------------------------------------------
             --------------
  30      =1  
  31      =1  #ifndef __DEFINITIONS_H__
  32      =1  #define __DEFINITIONS_H__
  33      =1  
  34      =1  #define DEBUG_TIMEOUTS
  35      =1  #include "c8051f340.h"
   1      =2  //----------------------------------------------------------------
             --------------
   2      =2  // C8051F340.h
   3      =2  //----------------------------------------------------------------
             --------------
   4      =2  // Copyright 2005 Silicon Laboratories, Inc.
   5      =2  // http://www.silabs.com
   6      =2  //
   7      =2  // Program Description:
   8      =2  //
   9      =2  // Register/bit definitions for the C8051F34x family.
  10      =2  //
  11      =2  //
  12      =2  // FID:            34X000002
  13      =2  // Target:         C8051F340, 'F341, 'F342, 'F343, 'F344, 'F345, '
             -F346, 'F347
  14      =2  // Tool chain:     Keil
  15      =2  // Command Line:   None
  16      =2  //
  17      =2  // Release 1.0
  18      =2  //    -Initial Release (GP\PKC)
  19      =2  //    -13 DEC 2005
  20      =2  
  21      =2  //----------------------------------------------------------------
             --------------
  22      =2  // Header File Preprocessor Directive
  23      =2  //----------------------------------------------------------------
             --------------
  24      =2  
  25      =2  #ifndef C8051F340_H
  26      =2  #define C8051F340_H
  27      =2  
  28      =2  //----------------------------------------------------------------
             --------------
  29      =2  // Byte Registers
  30      =2  //----------------------------------------------------------------
C51 COMPILER V8.02   F34X_MSD_UART                 07/24/2007 22:07:38 PAGE 3   

             --------------
  31      =2  
  32      =2  sfr  P0           =  0x80;             // Port 0 Latch
  33      =2  sfr  SP           =  0x81;             // Stack Pointer
  34      =2  sfr  DPL          =  0x82;             // Data Pointer Low
  35      =2  sfr  DPH          =  0x83;             // Data Pointer High
  36      =2  sfr  EMI0TC       =  0x84;             // EMIF Timing
  37      =2  sfr  EMI0CF       =  0x85;             // EMIF Configuration
  38      =2  sfr  OSCLCN       =  0x86;             // Internal Low-Freq Oscill
             -ator Control
  39      =2  sfr  PCON         =  0x87;             // Power Control
  40      =2  sfr  TCON         =  0x88;             // Timer/Counter Control
  41      =2  sfr  TMOD         =  0x89;             // Timer/Counter Mode
  42      =2  sfr  TL0          =  0x8A;             // Timer/Counter 0 Low
  43      =2  sfr  TL1          =  0x8B;             // Timer/Counter 1 Low
  44      =2  sfr  TH0          =  0x8C;             // Timer/Counter 0 High
  45      =2  sfr  TH1          =  0x8D;             // Timer/Counter 1 High
  46      =2  sfr  CKCON        =  0x8E;             // Clock Control
  47      =2  sfr  PSCTL        =  0x8F;             // Program Store R/W Contro
             -l
  48      =2  sfr  P1           =  0x90;             // Port 1 Latch
  49      =2  sfr  TMR3CN       =  0x91;             // Timer/Counter 3Control
  50      =2  sfr  TMR3RLL      =  0x92;             // Timer/Counter 3 Reload L
             -ow
  51      =2  sfr  TMR3RLH      =  0x93;             // Timer/Counter 3 Reload H
             -igh
  52      =2  sfr  TMR3L        =  0x94;             // Timer/Counter 3Low
  53      =2  sfr  TMR3H        =  0x95;             // Timer/Counter 3 High
  54      =2  sfr  USB0ADR      =  0x96;             // USB0 Indirect Address Re
             -gister
  55      =2  sfr  USB0DAT      =  0x97;             // USB0 Data Register
  56      =2  sfr  SCON0        =  0x98;             // UART0 Control
  57      =2  sfr  SBUF0        =  0x99;             // UART0 Data Buffer
  58      =2  sfr  CPT1CN       =  0x9A;             // Comparator1 Control
  59      =2  sfr  CPT0CN       =  0x9B;             // Comparator0 Control
  60      =2  sfr  CPT1MD       =  0x9C;             // Comparator1 Mode Selecti
             -on
  61      =2  sfr  CPT0MD       =  0x9D;             // Comparator0 Mode Selecti
             -on
  62      =2  sfr  CPT1MX       =  0x9E;             // Comparator1 MUX Selectio
             -n
  63      =2  sfr  CPT0MX       =  0x9F;             // Comparator0 MUX Selectio
             -n
  64      =2  sfr  P2           =  0xA0;             // Port 2 Latch
  65      =2  sfr  SPI0CFG      =  0xA1;             // SPI Configuration
  66      =2  sfr  SPI0CKR      =  0xA2;             // SPI Clock Rate Control
  67      =2  sfr  SPI0DAT      =  0xA3;             // SPI Data
  68      =2  sfr  P0MDOUT      =  0xA4;             // Port 0 Output Mode Confi
             -guration
  69      =2  sfr  P1MDOUT      =  0xA5;             // Port 1 Output Mode Confi
             -guration
  70      =2  sfr  P2MDOUT      =  0xA6;             // Port 2 Output Mode Confi
             -guration
  71      =2  sfr  P3MDOUT      =  0xA7;             // Port 3 Output Mode Confi
             -guration
  72      =2  sfr  IE           =  0xA8;             // Interrupt Enable
  73      =2  sfr  CLKSEL       =  0xA9;             // Clock Select
  74      =2  sfr  EMI0CN       =  0xAA;             // External Memory Interfac
             -e Control
  75      =2  sfr  SBCON1       =  0xAC;             // UART1 Baud Rate Generato
             -r Control
  76      =2  sfr  P4MDOUT      =  0xAE;             // Port 4 Output Mode Confi
C51 COMPILER V8.02   F34X_MSD_UART                 07/24/2007 22:07:38 PAGE 4   

             -guration
  77      =2  sfr  PFE0CN       =  0xAF;             // Prefetch Engine Control
  78      =2  sfr  P3           =  0xB0;             // Port 3 Latch
  79      =2  sfr  OSCXCN       =  0xB1;             // External Oscillator Cont
             -rol
  80      =2  sfr  OSCICN       =  0xB2;             // Internal Oscillator Cont
             -rol
  81      =2  sfr  OSCICL       =  0xB3;             // Internal Oscillator Cali
             -bration
  82      =2  sfr  SBRLL1       =  0xB4;             // UART1 Baud Rate Generato
             -r Low
  83      =2  sfr  SBRLH1       =  0xB5;             // UART1 Baud Rate Generato
             -r High
  84      =2  sfr  FLSCL        =  0xB6;             // Flash Scale
  85      =2  sfr  FLKEY        =  0xB7;             // Flash Lock and Key
  86      =2  sfr  IP           =  0xB8;             // Interrupt Priority
  87      =2  sfr  CLKMUL       =  0xB9;             // Clock Multiplier
  88      =2  sfr  AMX0N        =  0xBA;             // AMUX0 Negative Channel S
             -elect
  89      =2  sfr  AMX0P        =  0xBB;             // AMUX0 Positive Channel S
             -elect
  90      =2  sfr  ADC0CF       =  0xBC;             // ADC0 Configuration
  91      =2  sfr  ADC0L        =  0xBD;             // ADC0 Low
  92      =2  sfr  ADC0H        =  0xBE;             // ADC0 High
  93      =2  sfr  SMB0CN       =  0xC0;             // SMBus Control
  94      =2  sfr  SMB0CF       =  0xC1;             // SMBus Configuration
  95      =2  sfr  SMB0DAT      =  0xC2;             // SMBus Data
  96      =2  sfr  ADC0GTL      =  0xC3;             // ADC0 Greater-Than Compar
             -e Low
  97      =2  sfr  ADC0GTH      =  0xC4;             // ADC0 Greater-Than Compar
             -e High
  98      =2  sfr  ADC0LTL      =  0xC5;             // ADC0 Less-Than Compare W
             -ord Low
  99      =2  sfr  ADC0LTH      =  0xC6;             // ADC0 Less-Than Compare W
             -ord High
 100      =2  sfr  P4           =  0xC7;             // Port 4 Latch
 101      =2  sfr  TMR2CN       =  0xC8;             // Timer/Counter 2 Control
 102      =2  sfr  REG0CN       =  0xC9;             // Voltage Regulator Contro
             -l
 103      =2  sfr  TMR2RLL      =  0xCA;             // Timer/Counter 2 Reload L
             -ow
 104      =2  sfr  TMR2RLH      =  0xCB;             // Timer/Counter 2 Reload H
             -igh
 105      =2  sfr  TMR2L        =  0xCC;             // Timer/Counter 2 Low
 106      =2  sfr  TMR2H        =  0xCD;             // Timer/Counter 2 High
 107      =2  sfr  PSW          =  0xD0;             // Program Status Word
 108      =2  sfr  REF0CN       =  0xD1;             // Voltage Reference Contro
             -l
 109      =2  sfr  SCON1        =  0xD2;             // UART1 Control
 110      =2  sfr  SBUF1        =  0xD3;             // UART1 Data Buffer
 111      =2  sfr  P0SKIP       =  0xD4;             // Port 0 Skip
 112      =2  sfr  P1SKIP       =  0xD5;             // Port 1 Skip
 113      =2  sfr  P2SKIP       =  0xD6;             // Port 2 Skip
 114      =2  sfr  USB0XCN      =  0xD7;             // USB0 Transceiver Control
 115      =2  sfr  PCA0CN       =  0xD8;             // PCA0 Control
 116      =2  sfr  PCA0MD       =  0xD9;             // PCA0 Mode
 117      =2  sfr  PCA0CPM0     =  0xDA;             // PCA0 Module 0 Mode Regis
             -ter
 118      =2  sfr  PCA0CPM1     =  0xDB;             // PCA0 Module 1 Mode Regis
             -ter
 119      =2  sfr  PCA0CPM2     =  0xDC;             // PCA0 Module 2 Mode Regis
             -ter
C51 COMPILER V8.02   F34X_MSD_UART                 07/24/2007 22:07:38 PAGE 5   

 120      =2  sfr  PCA0CPM3     =  0xDD;             // PCA0 Module 3 Mode Regis
             -ter
 121      =2  sfr  PCA0CPM4     =  0xDE;             // PCA0 Module 4 Mode Regis
             -ter
 122      =2  sfr  P3SKIP       =  0xDF;             // Port 3 Skip
 123      =2  sfr  ACC          =  0xE0;             // Accumulator
 124      =2  sfr  XBR0         =  0xE1;             // Port I/O Crossbar Contro
             -l 0
 125      =2  sfr  XBR1         =  0xE2;             // Port I/O Crossbar Contro
             -l 1
 126      =2  sfr  XBR2         =  0xE3;             // Port I/O Crossbar Contro
             -l 2
 127      =2  sfr  IT01CF       =  0xE4;             // INT0/INT1 Configuration
 128      =2  sfr  SMOD1        =  0xE5;             // UART1 Mode
 129      =2  sfr  EIE1         =  0xE6;             // Extended Interrupt Enabl
             -e 1
 130      =2  sfr  EIE2         =  0xE7;             // Extended Interrupt Enabl
             -e 2
 131      =2  sfr  ADC0CN       =  0xE8;             // ADC0 Control
 132      =2  sfr  PCA0CPL1     =  0xE9;             // PCA0 Capture 1 Low
 133      =2  sfr  PCA0CPH1     =  0xEA;             // PCA0 Capture 1 High
 134      =2  sfr  PCA0CPL2     =  0xEB;             // PCA0 Capture 2 Low
 135      =2  sfr  PCA0CPH2     =  0xEC;             // PCA0 Capture 2 High
 136      =2  sfr  PCA0CPL3     =  0xED;             // PCA0 Capture 3 Low
 137      =2  sfr  PCA0CPH3     =  0xEE;             // PCA0 Capture 3 High
 138      =2  sfr  RSTSRC       =  0xEF;             // Reset Source Configurati
             -on/Status
 139      =2  sfr  B            =  0xF0;             // B Register
 140      =2  sfr  P0MDIN       =  0xF1;             // Port 0 Input Mode Config
             -uration
 141      =2  sfr  P1MDIN       =  0xF2;             // Port 1 Input Mode Config
             -uration
 142      =2  sfr  P2MDIN       =  0xF3;             // Port 2 Input Mode Config
             -uration
 143      =2  sfr  P3MDIN       =  0xF4;             // Port 3 Input Mode Config
             -uration
 144      =2  sfr  P4MDIN       =  0xF5;             // Port 4 Input Mode Config
             -uration
 145      =2  sfr  EIP1         =  0xF6;             // Extended Interrupt Prior
             -ity 1
 146      =2  sfr  EIP2         =  0xF7;             // Extended Interrupt Prior
             -ity 2
 147      =2  sfr  SPI0CN       =  0xF8;             // SPI0 Control
 148      =2  sfr  PCA0L        =  0xF9;             // PCA0 Counter Low
 149      =2  sfr  PCA0H        =  0xFA;             // PCA0 Counter High
 150      =2  sfr  PCA0CPL0     =  0xFB;             // PCA0 Capture 0 Low
 151      =2  sfr  PCA0CPH0     =  0xFC;             // PCA0 Capture 0 High
 152      =2  sfr  PCA0CPL4     =  0xFD;             // PCA0 Capture 4 Low
 153      =2  sfr  PCA0CPH4     =  0xFE;             // PCA0 Capture 4 High
 154      =2  sfr  VDM0CN       =  0xFF;             // VDD Monitor Control
 155      =2  
 156      =2  
 157      =2  //----------------------------------------------------------------
             --------------
 158      =2  // Bit Definitions
 159      =2  //----------------------------------------------------------------
             --------------
 160      =2  
 161      =2  // TCON 0x88
 162      =2  sbit TF1     = 0x8F;                   // Timer1 overflow flag
 163      =2  sbit TR1     = 0x8E;                   // Timer1 on/off control
 164      =2  sbit TF0     = 0x8D;                   // Timer0 overflow flag
C51 COMPILER V8.02   F34X_MSD_UART                 07/24/2007 22:07:38 PAGE 6   

 165      =2  sbit TR0     = 0x8C;                   // Timer0 on/off control
 166      =2  sbit IE1     = 0x8B;                   // Ext interrupt 1 edge fla
             -g
 167      =2  sbit IT1     = 0x8A;                   // Ext interrupt 1 type
 168      =2  sbit IE0     = 0x89;                   // Ext interrupt 0 edge fla
             -g
 169      =2  sbit IT0     = 0x88;                   // Ext interrupt 0 type
 170      =2  
 171      =2  // SCON0 0x98
 172      =2  sbit S0MODE  = 0x9F;                   // Serial mode control bit 
             -0
 173      =2                                         // Bit6 UNUSED
 174      =2  sbit MCE0    = 0x9D;                   // Multiprocessor communica
             -tion enable
 175      =2  sbit REN0    = 0x9C;                   // Receive enable
 176      =2  sbit TB80    = 0x9B;                   // Transmit bit 8
 177      =2  sbit RB80    = 0x9A;                   // Receive bit 8
 178      =2  sbit TI0     = 0x99;                   // Transmit interrupt flag
 179      =2  sbit RI0     = 0x98;                   // Receive interrupt flag
 180      =2  
 181      =2  // IE 0xA8
 182      =2  sbit EA      = 0xAF;                   // Global interrupt enable
 183      =2  sbit ESPI0   = 0xAE;                   // SPI0 interrupt enable
 184      =2  sbit ET2     = 0xAD;                   // Timer2 interrupt enable
 185      =2  sbit ES0     = 0xAC;                   // UART0 interrupt enable
 186      =2  sbit ET1     = 0xAB;                   // Timer1 interrupt enable
 187      =2  sbit EX1     = 0xAA;                   // External interrupt 1 ena
             -ble
 188      =2  sbit ET0     = 0xA9;                   // Timer0 interrupt enable
 189      =2  sbit EX0     = 0xA8;                   // External interrupt 0 ena
             -ble
 190      =2  
 191      =2  // IP 0xB8
 192      =2                                         // Bit7 UNUSED
 193      =2  sbit PSPI0   = 0xBE;                   // SPI0 interrupt priority
 194      =2  sbit PT2     = 0xBD;                   // Timer2 priority
 195      =2  sbit PS0     = 0xBC;                   // UART0 priority
 196      =2  sbit PT1     = 0xBB;                   // Timer1 priority
 197      =2  sbit PX1     = 0xBA;                   // External interrupt 1 pri
             -ority
 198      =2  sbit PT0     = 0xB9;                   // Timer0 priority
 199      =2  sbit PX0     = 0xB8;                   // External interrupt 0 pri
             -ority
 200      =2  
 201      =2  // SMB0CN 0xC0
 202      =2  sbit MASTER  = 0xC7;                   // Master/slave indicator
 203      =2  sbit TXMODE  = 0xC6;                   // Transmit mode indicator
 204      =2  sbit STA     = 0xC5;                   // Start flag
 205      =2  sbit STO     = 0xC4;                   // Stop flag
 206      =2  sbit ACKRQ   = 0xC3;                   // Acknowledge request
 207      =2  sbit ARBLOST = 0xC2;                   // Arbitration lost indicat
             -or
 208      =2  sbit ACK     = 0xC1;                   // Acknowledge flag
 209      =2  sbit SI      = 0xC0;                   // SMBus interrupt flag
 210      =2  
 211      =2  // TMR2CN 0xC8
 212      =2  sbit TF2H    = 0xCF;                   // Timer2 high byte overflo
             -w flag
 213      =2  sbit TF2L    = 0xCE;                   // Timer2 low byte overflow
             - flag
 214      =2  sbit TF2LEN  = 0xCD;                   // Timer2 low byte interrup
             -t enable
C51 COMPILER V8.02   F34X_MSD_UART                 07/24/2007 22:07:38 PAGE 7   

 215      =2  sbit T2CE    = 0xCC;                   // Timer2 capture enable
 216      =2  sbit T2SPLIT = 0xCB;                   // Timer2 split mode enable
 217      =2  sbit TR2     = 0xCA;                   // Timer2 on/off control
 218      =2  sbit T2CSS   = 0xC9;                   // Timer 2 Capture Source s
             -elect
 219      =2  sbit T2XCLK  = 0xC8;                   // Timer2 external clock se
             -lect
 220      =2  
 221      =2  // PSW 0xD0
 222      =2  sbit CY      = 0xD7;                   // Carry flag
 223      =2  sbit AC      = 0xD6;                   // Auxiliary carry flag
 224      =2  sbit F0      = 0xD5;                   // User flag 0
 225      =2  sbit RS1     = 0xD4;                   // Register bank select 1
 226      =2  sbit RS0     = 0xD3;                   // Register bank select 0
 227      =2  sbit OV      = 0xD2;                   // Overflow flag
 228      =2  sbit F1      = 0xD1;                   // User flag 1
 229      =2  sbit P       = 0xD0;                   // Accumulator parity flag
 230      =2  
 231      =2  // PCA0CN 0xD8
 232      =2  sbit CF      = 0xDF;                   // PCA0 counter overflow fl
             -ag
 233      =2  sbit CR      = 0xDE;                   // PCA0 counter run control
 234      =2                                         // Bit5 UNUSED
 235      =2  sbit CCF4    = 0xDC;                   // PCA0 module4 capture/com
             -pare flag
 236      =2  sbit CCF3    = 0xDB;                   // PCA0 module3 capture/com
             -pare flag
 237      =2  sbit CCF2    = 0xDA;                   // PCA0 module2 capture/com
             -pare flag
 238      =2  sbit CCF1    = 0xD9;                   // PCA0 module1 capture/com
             -pare flag
 239      =2  sbit CCF0    = 0xD8;                   // PCA0 module0 capture/com
             -pare flag
 240      =2  
 241      =2  // ADC0CN 0xE8
 242      =2  sbit AD0EN   = 0xEF;                   // ADC0 enable
 243      =2  sbit AD0TM   = 0xEE;                   // ADC0 track mode
 244      =2  sbit AD0INT  = 0xED;                   // ADC0 conversion complete
             - interrupt flag
 245      =2  sbit AD0BUSY = 0xEC;                   // ADC0 busy flag
 246      =2  sbit AD0WINT = 0xEB;                   // ADC0 window compare inte
             -rrupt flag
 247      =2  sbit AD0CM2  = 0xEA;                   // ADC0 conversion mode sel
             -ect 2
 248      =2  sbit AD0CM1  = 0xE9;                   // ADC0 conversion mode sel
             -ect 1
 249      =2  sbit AD0CM0  = 0xE8;                   // ADC0 conversion mode sel
             -ect 0
 250      =2  
 251      =2  // SPI0CN 0xF8
 252      =2  sbit SPIF    = 0xFF;                   // SPI0 interrupt flag
 253      =2  sbit WCOL    = 0xFE;                   // SPI0 write collision fla
             -g
 254      =2  sbit MODF    = 0xFD;                   // SPI0 mode fault flag
 255      =2  sbit RXOVRN  = 0xFC;                   // SPI0 rx overrun flag
 256      =2  sbit NSSMD1  = 0xFB;                   // SPI0 slave select mode 1
 257      =2  sbit NSSMD0  = 0xFA;                   // SPI0 slave select mode 0
 258      =2  sbit TXBMT   = 0xF9;                   // SPI0 transmit buffer emp
             -ty
 259      =2  sbit SPIEN   = 0xF8;                   // SPI0 SPI enable
 260      =2  
 261      =2  
C51 COMPILER V8.02   F34X_MSD_UART                 07/24/2007 22:07:38 PAGE 8   

 262      =2  //----------------------------------------------------------------
             --------------
 263      =2  // Interrupt Priorities
 264      =2  //----------------------------------------------------------------
             --------------
 265      =2  
 266      =2  #define INTERRUPT_INT0             0   // External Interrupt 0
 267      =2  #define INTERRUPT_TIMER0           1   // Timer0 Overflow
 268      =2  #define INTERRUPT_INT1             2   // External Interrupt 1
 269      =2  #define INTERRUPT_TIMER1           3   // Timer1 Overflow
 270      =2  #define INTERRUPT_UART0            4   // Serial Port 0
 271      =2  #define INTERRUPT_TIMER2           5   // Timer2 Overflow
 272      =2  #define INTERRUPT_SPI0             6   // Serial Peripheral Interf
             -ace 0
 273      =2  #define INTERRUPT_SMBUS0           7   // SMBus0 Interface
 274      =2  #define INTERRUPT_USB0             8   // USB Interface
 275      =2  #define INTERRUPT_ADC0_WINDOW      9   // ADC0 Window Comparison
 276      =2  #define INTERRUPT_ADC0_EOC         10  // ADC0 End Of Conversion
 277      =2  #define INTERRUPT_PCA0             11  // PCA0 Peripheral
 278      =2  #define INTERRUPT_COMPARATOR0      12  // Comparator0
 279      =2  #define INTERRUPT_COMPARATOR1      13  // Comparator1
 280      =2  #define INTERRUPT_TIMER3           14  // Timer3 Overflow
 281      =2  #define INTERRUPT_VBUS_LEVEL       15  // VBUS level-triggered int
             -errupt
 282      =2  #define INTERRUPT_UART1            16  // Serial Port 1
 283      =2  
 284      =2  //----------------------------------------------------------------
             --------------
 285      =2  // Header File PreProcessor Directive
 286      =2  //----------------------------------------------------------------
             --------------
 287      =2  
 288      =2  #endif                                 // #define C8051F340_H
 289      =2  
 290      =2  //----------------------------------------------------------------
             --------------
 291      =2  // End Of File
 292      =2  //----------------------------------------------------------------
             --------------
  36      =1  #ifdef DEBUG_TIMEOUTS
  37      =1  sbit START_STOP_SPI = P3^0 ;
  38      =1  sbit START_STOP_READ_TO = P3^1;
  39      =1  sbit START_STOP_WRITE_TO = P3^2;
  40      =1  
  41      =1  #define START_SPI_TIMEOUT (START_STOP_SPI = 1)
  42      =1  #define STOP_SPI_TIME_OUT (START_STOP_SPI = 0)
  43      =1  #define START_READ_COPY (START_STOP_READ_TO = 1)
  44      =1  #define STOP_READ_COPY (START_STOP_READ_TO = 0)
  45      =1  #define START_WRITE_COPY (START_STOP_WRITE_TO = 1)
  46      =1  #define STOP_WRITE_COPY (START_STOP_WRITE_TO = 0)
  47      =1  #else
           =1 
           =1 #define START_SPI_TIMEOUT /\
           =1 /
           =1 #define STOP_SPI_TIME_OUT /\
           =1 /
           =1 #define START_READ_COPY /\
           =1 /
           =1 #define STOP_READ_COPY /\
           =1 /
           =1 #define START_WRITE_COPY /\
           =1 /
C51 COMPILER V8.02   F34X_MSD_UART                 07/24/2007 22:07:38 PAGE 9   

           =1 #define STOP_WRITE_COPY /\
           =1 /
           =1 
           =1 #endif
  63      =1  
  64      =1  #define ENDLINE         "\r\n"
  65      =1  #define ENDLINE_SGN '\r'
  66      =1  
  67      =1  #endif
  36          #include "F34x_MSD_UART.h"
   1      =1  //----------------------------------------------------------------
             --------------
   2      =1  // F34x_MSD_UART.h
   3      =1  //----------------------------------------------------------------
             --------------
   4      =1  // Copyright 2006 Silicon Laboratories, Inc.
   5      =1  // http://www.silabs.com
   6      =1  //
   7      =1  // Program Description:
   8      =1  //
   9      =1  // Header file with function prototypes relevant to F34x_UART.c
  10      =1  //
  11      =1  //
  12      =1  // FID:            34X000058
  13      =1  // Target:         C8051F34x
  14      =1  // Tool chain:     Keil
  15      =1  // Command Line:   See Readme.txt
  16      =1  // Project Name:   F34x_USB_MSD
  17      =1  //
  18      =1  // Release 1.1
  19      =1  //    -All changes by PKC
  20      =1  //    -09 JUN 2006
  21      =1  //    -No changes; incremented revision number to match project re
             -vision
  22      =1  //
  23      =1  // Release 1.0
  24      =1  //    -Initial Release
  25      =1  //
  26      =1  
  27      =1  //----------------------------------------------------------------
             --------------
  28      =1  // Header File Preprocessor Directive
  29      =1  //----------------------------------------------------------------
             --------------
  30      =1  
  31      =1  #ifndef _UART_H_
  32      =1  #define _UART_H_
  33      =1  
  34      =1  //----------------------------------------------------------------
             --------------
  35      =1  // Function Prototypes
  36      =1  //----------------------------------------------------------------
             --------------
  37      =1  
  38      =1  void UART0_Init(void);
  39      =1  
  40      =1  unsigned char key_available(void);
  41      =1  
  42      =1  #endif
  37          #include "c8051f340.h"
   1      =1  //----------------------------------------------------------------
             --------------
C51 COMPILER V8.02   F34X_MSD_UART                 07/24/2007 22:07:38 PAGE 10  

   2      =1  // C8051F340.h
   3      =1  //----------------------------------------------------------------
             --------------
   4      =1  // Copyright 2005 Silicon Laboratories, Inc.
   5      =1  // http://www.silabs.com
   6      =1  //
   7      =1  // Program Description:
   8      =1  //
   9      =1  // Register/bit definitions for the C8051F34x family.
  10      =1  //
  11      =1  //
  12      =1  // FID:            34X000002
  13      =1  // Target:         C8051F340, 'F341, 'F342, 'F343, 'F344, 'F345, '
             -F346, 'F347
  14      =1  // Tool chain:     Keil
  15      =1  // Command Line:   None
  16      =1  //
  17      =1  // Release 1.0
  18      =1  //    -Initial Release (GP\PKC)
  19      =1  //    -13 DEC 2005
  20      =1  
  21      =1  //----------------------------------------------------------------
             --------------
  22      =1  // Header File Preprocessor Directive
  23      =1  //----------------------------------------------------------------
             --------------
  24      =1  
  25      =1  #ifndef C8051F340_H
           =1 #define C8051F340_H
           =1 
           =1 //----------------------------------------------------------------
             --------------
           =1 // Byte Registers
           =1 //----------------------------------------------------------------
             --------------
           =1 
           =1 sfr  P0           =  0x80;             // Port 0 Latch
           =1 sfr  SP           =  0x81;             // Stack Pointer
           =1 sfr  DPL          =  0x82;             // Data Pointer Low
           =1 sfr  DPH          =  0x83;             // Data Pointer High
           =1 sfr  EMI0TC       =  0x84;             // EMIF Timing
           =1 sfr  EMI0CF       =  0x85;             // EMIF Configuration
           =1 sfr  OSCLCN       =  0x86;             // Internal Low-Freq Oscill
             -ator Control
           =1 sfr  PCON         =  0x87;             // Power Control
           =1 sfr  TCON         =  0x88;             // Timer/Counter Control
           =1 sfr  TMOD         =  0x89;             // Timer/Counter Mode
           =1 sfr  TL0          =  0x8A;             // Timer/Counter 0 Low
           =1 sfr  TL1          =  0x8B;             // Timer/Counter 1 Low
           =1 sfr  TH0          =  0x8C;             // Timer/Counter 0 High
           =1 sfr  TH1          =  0x8D;             // Timer/Counter 1 High
           =1 sfr  CKCON        =  0x8E;             // Clock Control
           =1 sfr  PSCTL        =  0x8F;             // Program Store R/W Contro
             -l
           =1 sfr  P1           =  0x90;             // Port 1 Latch
           =1 sfr  TMR3CN       =  0x91;             // Timer/Counter 3Control
           =1 sfr  TMR3RLL      =  0x92;             // Timer/Counter 3 Reload L
             -ow
           =1 sfr  TMR3RLH      =  0x93;             // Timer/Counter 3 Reload H
             -igh
           =1 sfr  TMR3L        =  0x94;             // Timer/Counter 3Low
           =1 sfr  TMR3H        =  0x95;             // Timer/Counter 3 High
C51 COMPILER V8.02   F34X_MSD_UART                 07/24/2007 22:07:38 PAGE 11  

           =1 sfr  USB0ADR      =  0x96;             // USB0 Indirect Address Re
             -gister
           =1 sfr  USB0DAT      =  0x97;             // USB0 Data Register
           =1 sfr  SCON0        =  0x98;             // UART0 Control
           =1 sfr  SBUF0        =  0x99;             // UART0 Data Buffer
           =1 sfr  CPT1CN       =  0x9A;             // Comparator1 Control
           =1 sfr  CPT0CN       =  0x9B;             // Comparator0 Control
           =1 sfr  CPT1MD       =  0x9C;             // Comparator1 Mode Selecti
             -on
           =1 sfr  CPT0MD       =  0x9D;             // Comparator0 Mode Selecti
             -on
           =1 sfr  CPT1MX       =  0x9E;             // Comparator1 MUX Selectio
             -n
           =1 sfr  CPT0MX       =  0x9F;             // Comparator0 MUX Selectio
             -n
           =1 sfr  P2           =  0xA0;             // Port 2 Latch
           =1 sfr  SPI0CFG      =  0xA1;             // SPI Configuration
           =1 sfr  SPI0CKR      =  0xA2;             // SPI Clock Rate Control
           =1 sfr  SPI0DAT      =  0xA3;             // SPI Data
           =1 sfr  P0MDOUT      =  0xA4;             // Port 0 Output Mode Confi
             -guration
           =1 sfr  P1MDOUT      =  0xA5;             // Port 1 Output Mode Confi
             -guration
           =1 sfr  P2MDOUT      =  0xA6;             // Port 2 Output Mode Confi
             -guration
           =1 sfr  P3MDOUT      =  0xA7;             // Port 3 Output Mode Confi
             -guration
           =1 sfr  IE           =  0xA8;             // Interrupt Enable
           =1 sfr  CLKSEL       =  0xA9;             // Clock Select
           =1 sfr  EMI0CN       =  0xAA;             // External Memory Interfac
             -e Control
           =1 sfr  SBCON1       =  0xAC;             // UART1 Baud Rate Generato
             -r Control
           =1 sfr  P4MDOUT      =  0xAE;             // Port 4 Output Mode Confi
             -guration
           =1 sfr  PFE0CN       =  0xAF;             // Prefetch Engine Control
           =1 sfr  P3           =  0xB0;             // Port 3 Latch
           =1 sfr  OSCXCN       =  0xB1;             // External Oscillator Cont
             -rol
           =1 sfr  OSCICN       =  0xB2;             // Internal Oscillator Cont
             -rol
           =1 sfr  OSCICL       =  0xB3;             // Internal Oscillator Cali
             -bration
           =1 sfr  SBRLL1       =  0xB4;             // UART1 Baud Rate Generato
             -r Low
           =1 sfr  SBRLH1       =  0xB5;             // UART1 Baud Rate Generato
             -r High
           =1 sfr  FLSCL        =  0xB6;             // Flash Scale
           =1 sfr  FLKEY        =  0xB7;             // Flash Lock and Key
           =1 sfr  IP           =  0xB8;             // Interrupt Priority
           =1 sfr  CLKMUL       =  0xB9;             // Clock Multiplier
           =1 sfr  AMX0N        =  0xBA;             // AMUX0 Negative Channel S
             -elect
           =1 sfr  AMX0P        =  0xBB;             // AMUX0 Positive Channel S
             -elect
           =1 sfr  ADC0CF       =  0xBC;             // ADC0 Configuration
           =1 sfr  ADC0L        =  0xBD;             // ADC0 Low
           =1 sfr  ADC0H        =  0xBE;             // ADC0 High
           =1 sfr  SMB0CN       =  0xC0;             // SMBus Control
           =1 sfr  SMB0CF       =  0xC1;             // SMBus Configuration
           =1 sfr  SMB0DAT      =  0xC2;             // SMBus Data
           =1 sfr  ADC0GTL      =  0xC3;             // ADC0 Greater-Than Compar
C51 COMPILER V8.02   F34X_MSD_UART                 07/24/2007 22:07:38 PAGE 12  

             -e Low
           =1 sfr  ADC0GTH      =  0xC4;             // ADC0 Greater-Than Compar
             -e High
           =1 sfr  ADC0LTL      =  0xC5;             // ADC0 Less-Than Compare W
             -ord Low
           =1 sfr  ADC0LTH      =  0xC6;             // ADC0 Less-Than Compare W
             -ord High
           =1 sfr  P4           =  0xC7;             // Port 4 Latch
           =1 sfr  TMR2CN       =  0xC8;             // Timer/Counter 2 Control
           =1 sfr  REG0CN       =  0xC9;             // Voltage Regulator Contro
             -l
           =1 sfr  TMR2RLL      =  0xCA;             // Timer/Counter 2 Reload L
             -ow
           =1 sfr  TMR2RLH      =  0xCB;             // Timer/Counter 2 Reload H
             -igh
           =1 sfr  TMR2L        =  0xCC;             // Timer/Counter 2 Low
           =1 sfr  TMR2H        =  0xCD;             // Timer/Counter 2 High
           =1 sfr  PSW          =  0xD0;             // Program Status Word
           =1 sfr  REF0CN       =  0xD1;             // Voltage Reference Contro
             -l
           =1 sfr  SCON1        =  0xD2;             // UART1 Control
           =1 sfr  SBUF1        =  0xD3;             // UART1 Data Buffer
           =1 sfr  P0SKIP       =  0xD4;             // Port 0 Skip
           =1 sfr  P1SKIP       =  0xD5;             // Port 1 Skip
           =1 sfr  P2SKIP       =  0xD6;             // Port 2 Skip
           =1 sfr  USB0XCN      =  0xD7;             // USB0 Transceiver Control
           =1 sfr  PCA0CN       =  0xD8;             // PCA0 Control
           =1 sfr  PCA0MD       =  0xD9;             // PCA0 Mode
           =1 sfr  PCA0CPM0     =  0xDA;             // PCA0 Module 0 Mode Regis
             -ter
           =1 sfr  PCA0CPM1     =  0xDB;             // PCA0 Module 1 Mode Regis
             -ter
           =1 sfr  PCA0CPM2     =  0xDC;             // PCA0 Module 2 Mode Regis
             -ter
           =1 sfr  PCA0CPM3     =  0xDD;             // PCA0 Module 3 Mode Regis
             -ter
           =1 sfr  PCA0CPM4     =  0xDE;             // PCA0 Module 4 Mode Regis
             -ter
           =1 sfr  P3SKIP       =  0xDF;             // Port 3 Skip
           =1 sfr  ACC          =  0xE0;             // Accumulator
           =1 sfr  XBR0         =  0xE1;             // Port I/O Crossbar Contro
             -l 0
           =1 sfr  XBR1         =  0xE2;             // Port I/O Crossbar Contro
             -l 1
           =1 sfr  XBR2         =  0xE3;             // Port I/O Crossbar Contro
             -l 2
           =1 sfr  IT01CF       =  0xE4;             // INT0/INT1 Configuration
           =1 sfr  SMOD1        =  0xE5;             // UART1 Mode
           =1 sfr  EIE1         =  0xE6;             // Extended Interrupt Enabl
             -e 1
           =1 sfr  EIE2         =  0xE7;             // Extended Interrupt Enabl
             -e 2
           =1 sfr  ADC0CN       =  0xE8;             // ADC0 Control
           =1 sfr  PCA0CPL1     =  0xE9;             // PCA0 Capture 1 Low
           =1 sfr  PCA0CPH1     =  0xEA;             // PCA0 Capture 1 High
           =1 sfr  PCA0CPL2     =  0xEB;             // PCA0 Capture 2 Low
           =1 sfr  PCA0CPH2     =  0xEC;             // PCA0 Capture 2 High
           =1 sfr  PCA0CPL3     =  0xED;             // PCA0 Capture 3 Low
           =1 sfr  PCA0CPH3     =  0xEE;             // PCA0 Capture 3 High
           =1 sfr  RSTSRC       =  0xEF;             // Reset Source Configurati
             -on/Status
           =1 sfr  B            =  0xF0;             // B Register
C51 COMPILER V8.02   F34X_MSD_UART                 07/24/2007 22:07:38 PAGE 13  

           =1 sfr  P0MDIN       =  0xF1;             // Port 0 Input Mode Config
             -uration
           =1 sfr  P1MDIN       =  0xF2;             // Port 1 Input Mode Config
             -uration
           =1 sfr  P2MDIN       =  0xF3;             // Port 2 Input Mode Config
             -uration
           =1 sfr  P3MDIN       =  0xF4;             // Port 3 Input Mode Config
             -uration
           =1 sfr  P4MDIN       =  0xF5;             // Port 4 Input Mode Config
             -uration
           =1 sfr  EIP1         =  0xF6;             // Extended Interrupt Prior
             -ity 1
           =1 sfr  EIP2         =  0xF7;             // Extended Interrupt Prior
             -ity 2
           =1 sfr  SPI0CN       =  0xF8;             // SPI0 Control
           =1 sfr  PCA0L        =  0xF9;             // PCA0 Counter Low
           =1 sfr  PCA0H        =  0xFA;             // PCA0 Counter High
           =1 sfr  PCA0CPL0     =  0xFB;             // PCA0 Capture 0 Low
           =1 sfr  PCA0CPH0     =  0xFC;             // PCA0 Capture 0 High
           =1 sfr  PCA0CPL4     =  0xFD;             // PCA0 Capture 4 Low
           =1 sfr  PCA0CPH4     =  0xFE;             // PCA0 Capture 4 High
           =1 sfr  VDM0CN       =  0xFF;             // VDD Monitor Control
           =1 
           =1 
           =1 //----------------------------------------------------------------
             --------------
           =1 // Bit Definitions
           =1 //----------------------------------------------------------------
             --------------
           =1 
           =1 // TCON 0x88
           =1 sbit TF1     = 0x8F;                   // Timer1 overflow flag
           =1 sbit TR1     = 0x8E;                   // Timer1 on/off control
           =1 sbit TF0     = 0x8D;                   // Timer0 overflow flag
           =1 sbit TR0     = 0x8C;                   // Timer0 on/off control
           =1 sbit IE1     = 0x8B;                   // Ext interrupt 1 edge fla
             -g
           =1 sbit IT1     = 0x8A;                   // Ext interrupt 1 type
           =1 sbit IE0     = 0x89;                   // Ext interrupt 0 edge fla
             -g
           =1 sbit IT0     = 0x88;                   // Ext interrupt 0 type
           =1 
           =1 // SCON0 0x98
           =1 sbit S0MODE  = 0x9F;                   // Serial mode control bit 
             -0
           =1                                        // Bit6 UNUSED
           =1 sbit MCE0    = 0x9D;                   // Multiprocessor communica
             -tion enable
           =1 sbit REN0    = 0x9C;                   // Receive enable
           =1 sbit TB80    = 0x9B;                   // Transmit bit 8
           =1 sbit RB80    = 0x9A;                   // Receive bit 8
           =1 sbit TI0     = 0x99;                   // Transmit interrupt flag
           =1 sbit RI0     = 0x98;                   // Receive interrupt flag
           =1 
           =1 // IE 0xA8
           =1 sbit EA      = 0xAF;                   // Global interrupt enable
           =1 sbit ESPI0   = 0xAE;                   // SPI0 interrupt enable
           =1 sbit ET2     = 0xAD;                   // Timer2 interrupt enable
           =1 sbit ES0     = 0xAC;                   // UART0 interrupt enable
           =1 sbit ET1     = 0xAB;                   // Timer1 interrupt enable
           =1 sbit EX1     = 0xAA;                   // External interrupt 1 ena
             -ble
C51 COMPILER V8.02   F34X_MSD_UART                 07/24/2007 22:07:38 PAGE 14  

           =1 sbit ET0     = 0xA9;                   // Timer0 interrupt enable
           =1 sbit EX0     = 0xA8;                   // External interrupt 0 ena
             -ble
           =1 
           =1 // IP 0xB8
           =1                                        // Bit7 UNUSED
           =1 sbit PSPI0   = 0xBE;                   // SPI0 interrupt priority
           =1 sbit PT2     = 0xBD;                   // Timer2 priority
           =1 sbit PS0     = 0xBC;                   // UART0 priority
           =1 sbit PT1     = 0xBB;                   // Timer1 priority
           =1 sbit PX1     = 0xBA;                   // External interrupt 1 pri
             -ority
           =1 sbit PT0     = 0xB9;                   // Timer0 priority
           =1 sbit PX0     = 0xB8;                   // External interrupt 0 pri
             -ority
           =1 
           =1 // SMB0CN 0xC0
           =1 sbit MASTER  = 0xC7;                   // Master/slave indicator
           =1 sbit TXMODE  = 0xC6;                   // Transmit mode indicator
           =1 sbit STA     = 0xC5;                   // Start flag
           =1 sbit STO     = 0xC4;                   // Stop flag
           =1 sbit ACKRQ   = 0xC3;                   // Acknowledge request
           =1 sbit ARBLOST = 0xC2;                   // Arbitration lost indicat
             -or
           =1 sbit ACK     = 0xC1;                   // Acknowledge flag
           =1 sbit SI      = 0xC0;                   // SMBus interrupt flag
           =1 
           =1 // TMR2CN 0xC8
           =1 sbit TF2H    = 0xCF;                   // Timer2 high byte overflo
             -w flag
           =1 sbit TF2L    = 0xCE;                   // Timer2 low byte overflow
             - flag
           =1 sbit TF2LEN  = 0xCD;                   // Timer2 low byte interrup
             -t enable
           =1 sbit T2CE    = 0xCC;                   // Timer2 capture enable
           =1 sbit T2SPLIT = 0xCB;                   // Timer2 split mode enable
           =1 sbit TR2     = 0xCA;                   // Timer2 on/off control
           =1 sbit T2CSS   = 0xC9;                   // Timer 2 Capture Source s
             -elect
           =1 sbit T2XCLK  = 0xC8;                   // Timer2 external clock se
             -lect
           =1 
           =1 // PSW 0xD0
           =1 sbit CY      = 0xD7;                   // Carry flag
           =1 sbit AC      = 0xD6;                   // Auxiliary carry flag
           =1 sbit F0      = 0xD5;                   // User flag 0
           =1 sbit RS1     = 0xD4;                   // Register bank select 1
           =1 sbit RS0     = 0xD3;                   // Register bank select 0
           =1 sbit OV      = 0xD2;                   // Overflow flag
           =1 sbit F1      = 0xD1;                   // User flag 1
           =1 sbit P       = 0xD0;                   // Accumulator parity flag
           =1 
           =1 // PCA0CN 0xD8
           =1 sbit CF      = 0xDF;                   // PCA0 counter overflow fl
             -ag
           =1 sbit CR      = 0xDE;                   // PCA0 counter run control
           =1                                        // Bit5 UNUSED
           =1 sbit CCF4    = 0xDC;                   // PCA0 module4 capture/com
             -pare flag
           =1 sbit CCF3    = 0xDB;                   // PCA0 module3 capture/com
             -pare flag
           =1 sbit CCF2    = 0xDA;                   // PCA0 module2 capture/com
C51 COMPILER V8.02   F34X_MSD_UART                 07/24/2007 22:07:38 PAGE 15  

             -pare flag
           =1 sbit CCF1    = 0xD9;                   // PCA0 module1 capture/com
             -pare flag
           =1 sbit CCF0    = 0xD8;                   // PCA0 module0 capture/com
             -pare flag
           =1 
           =1 // ADC0CN 0xE8
           =1 sbit AD0EN   = 0xEF;                   // ADC0 enable
           =1 sbit AD0TM   = 0xEE;                   // ADC0 track mode
           =1 sbit AD0INT  = 0xED;                   // ADC0 conversion complete
             - interrupt flag
           =1 sbit AD0BUSY = 0xEC;                   // ADC0 busy flag
           =1 sbit AD0WINT = 0xEB;                   // ADC0 window compare inte
             -rrupt flag
           =1 sbit AD0CM2  = 0xEA;                   // ADC0 conversion mode sel
             -ect 2
           =1 sbit AD0CM1  = 0xE9;                   // ADC0 conversion mode sel
             -ect 1
           =1 sbit AD0CM0  = 0xE8;                   // ADC0 conversion mode sel
             -ect 0
           =1 
           =1 // SPI0CN 0xF8
           =1 sbit SPIF    = 0xFF;                   // SPI0 interrupt flag
           =1 sbit WCOL    = 0xFE;                   // SPI0 write collision fla
             -g
           =1 sbit MODF    = 0xFD;                   // SPI0 mode fault flag
           =1 sbit RXOVRN  = 0xFC;                   // SPI0 rx overrun flag
           =1 sbit NSSMD1  = 0xFB;                   // SPI0 slave select mode 1
           =1 sbit NSSMD0  = 0xFA;                   // SPI0 slave select mode 0
           =1 sbit TXBMT   = 0xF9;                   // SPI0 transmit buffer emp
             -ty
           =1 sbit SPIEN   = 0xF8;                   // SPI0 SPI enable
           =1 
           =1 
           =1 //----------------------------------------------------------------
             --------------
           =1 // Interrupt Priorities
           =1 //----------------------------------------------------------------
             --------------
           =1 
           =1 #define INTERRUPT_INT0             0   // External Interrupt 0
           =1 #define INTERRUPT_TIMER0           1   // Timer0 Overflow
           =1 #define INTERRUPT_INT1             2   // External Interrupt 1
           =1 #define INTERRUPT_TIMER1           3   // Timer1 Overflow
           =1 #define INTERRUPT_UART0            4   // Serial Port 0
           =1 #define INTERRUPT_TIMER2           5   // Timer2 Overflow
           =1 #define INTERRUPT_SPI0             6   // Serial Peripheral Interf
             -ace 0
           =1 #define INTERRUPT_SMBUS0           7   // SMBus0 Interface
           =1 #define INTERRUPT_USB0             8   // USB Interface
           =1 #define INTERRUPT_ADC0_WINDOW      9   // ADC0 Window Comparison
           =1 #define INTERRUPT_ADC0_EOC         10  // ADC0 End Of Conversion
           =1 #define INTERRUPT_PCA0             11  // PCA0 Peripheral
           =1 #define INTERRUPT_COMPARATOR0      12  // Comparator0
           =1 #define INTERRUPT_COMPARATOR1      13  // Comparator1
           =1 #define INTERRUPT_TIMER3           14  // Timer3 Overflow
           =1 #define INTERRUPT_VBUS_LEVEL       15  // VBUS level-triggered int
             -errupt
           =1 #define INTERRUPT_UART1            16  // Serial Port 1
           =1 
           =1 //----------------------------------------------------------------
             --------------
C51 COMPILER V8.02   F34X_MSD_UART                 07/24/2007 22:07:38 PAGE 16  

           =1 // Header File PreProcessor Directive
           =1 //----------------------------------------------------------------
             --------------
           =1 
           =1 #endif                                 // #define C8051F340_H
 289      =1  
 290      =1  //----------------------------------------------------------------
             --------------
 291      =1  // End Of File
 292      =1  //----------------------------------------------------------------
             --------------
  38          #include "F34x_MSD_Put_Char.h"
   1      =1  //----------------------------------------------------------------
             --------------
   2      =1  // F34x_MSD_Put_Char.h
   3      =1  //----------------------------------------------------------------
             --------------
   4      =1  // Copyright 2006 Silicon Laboratories, Inc.
   5      =1  // http://www.silabs.com
   6      =1  //
   7      =1  // Program Description:
   8      =1  //
   9      =1  // Header file with function prototypes relevant to F34x_Put_Char.
             -c
  10      =1  //
  11      =1  //
  12      =1  // FID:            34X000050
  13      =1  // Target:         C8051F34x
  14      =1  // Tool chain:     Keil
  15      =1  // Command Line:   See Readme.txt
  16      =1  // Project Name:   F34x_USB_MSD
  17      =1  //
  18      =1  // Release 1.1
  19      =1  //    -All changes by PKC
  20      =1  //    -09 JUN 2006
  21      =1  //    -No changes; incremented revision number to match project re
             -vision
  22      =1  //
  23      =1  // Release 1.0
  24      =1  //    -Initial Release
  25      =1  //
  26      =1  
  27      =1  //----------------------------------------------------------------
             --------------
  28      =1  // Header File Preprocessor Directive
  29      =1  //----------------------------------------------------------------
             --------------
  30      =1  
  31      =1  #ifndef __PUTCHAR_H__
  32      =1  #define __PUTCHAR_H__
  33      =1  
  34      =1  
  35      =1  #endif
  39          #include <stdio.h>
   1      =1  /*----------------------------------------------------------------
             -----------
   2      =1  STDIO.H
   3      =1  
   4      =1  Prototypes for standard I/O functions.
   5      =1  Copyright (c) 1988-2002 Keil Elektronik GmbH and Keil Software, In
             -c.
   6      =1  All rights reserved.
C51 COMPILER V8.02   F34X_MSD_UART                 07/24/2007 22:07:38 PAGE 17  

   7      =1  ------------------------------------------------------------------
             ---------*/
   8      =1  
   9      =1  #ifndef __STDIO_H__
  10      =1  #define __STDIO_H__
  11      =1  
  12      =1  #ifndef EOF
  13      =1   #define EOF -1
  14      =1  #endif
  15      =1  
  16      =1  #ifndef NULL
  17      =1   #define NULL ((void *) 0)
  18      =1  #endif
  19      =1  
  20      =1  #ifndef _SIZE_T
  21      =1   #define _SIZE_T
  22      =1   typedef unsigned int size_t;
  23      =1  #endif
  24      =1  
  25      =1  #pragma SAVE
  26      =1  #pragma REGPARMS
  27      =1  extern char _getkey (void);
  28      =1  extern char getchar (void);
  29      =1  extern char ungetchar (char);
  30      =1  extern char putchar (char);
  31      =1  extern int printf   (const char *, ...);
  32      =1  extern int sprintf  (char *, const char *, ...);
  33      =1  extern int vprintf  (const char *, char *);
  34      =1  extern int vsprintf (char *, const char *, char *);
  35      =1  extern char *gets (char *, int n);
  36      =1  extern int scanf (const char *, ...);
  37      =1  extern int sscanf (char *, const char *, ...);
  38      =1  extern int puts (const char *);
  39      =1  
  40      =1  #pragma RESTORE
  41      =1  
  42      =1  #endif
  43      =1  
  40          
  41          #ifdef __F340_VER__
  42          #ifdef F340_24M
              #define START_SYSCLK 24000000
              #else
  45          #define START_SYSCLK 48000000
  46          #endif
  47          //#define START_SYSCLK 12000000
  48          #else
              #ifdef __F326_VER__
              #define START_SYSCLK 24000000
              #else
              #define START_SYSCLK 12000000
              #endif
              #endif
  55          #define SYSCLK       START_SYSCLK /** 2*/  // SYSCLK frequency in 
             -Hz
  56          
  57          #define BAUDRATE     115200            // Baud rate of UART in bps
  58          
  59          #define USBCLK           48000000
  60          
  61          
  62          //----------------------------------------------------------------
C51 COMPILER V8.02   F34X_MSD_UART                 07/24/2007 22:07:38 PAGE 18  

             -------------
  63          // UART0_Init
  64          //----------------------------------------------------------------
             -------------
  65          //
  66          // This function initializes UART 0 interface.
  67          //
  68          // Parameters   :
  69          // Return Value :
  70          //----------------------------------------------------------------
             -------------
  71          
  72          void UART0_Init(void) {
  73   1         int xdata sbrl ;
  74   1         sbrl =  (0xFFFF - (SYSCLK/BAUDRATE/2)) + 1;
  75   1         SCON0 = 0x10;                       // SCON0: 8-bit variable bi
             -t rate
  76   1                                             //        level of STOP bit
             - is ignored
  77   1                                             //        RX enabled
  78   1                                             //        ninth bits are ze
             -ros
  79   1                                             //        clear RI0 and TI0
             - bits
  80   1      
  81   1      #ifdef __F326_VER__
                 SMOD0 = 0x0c;
                 
                 SBRLH0 = (sbrl & 0xFF00) >> 8;
                 SBRLL0 = sbrl & 0x00ff; 
              
                 SBCON0 = 0x43; 
              
                // ES0 = 1;
                // PS0 = 1;
                 TI0 = 1;
              #else
  93   1         if (SYSCLK/BAUDRATE/2/256 < 1) 
  94   1         {
  95   2            TH1 = -(SYSCLK/BAUDRATE/2);
  96   2            CKCON |=  0x08;                  // T1M = 1; SCA1:0 = xx
  97   2         } 
  98   1         else if (SYSCLK/BAUDRATE/2/256 < 4) 
  99   1         {
 100   2            TH1 = -(SYSCLK/BAUDRATE/2/4);
 101   2            CKCON &= ~0x0B;                  
 102   2            CKCON |=  0x01;                  // T1M = 0; SCA1:0 = 01
 103   2         } 
 104   1         else if (SYSCLK/BAUDRATE/2/256 < 12) 
 105   1         {
 106   2            TH1 = -(SYSCLK/BAUDRATE/2/12);
 107   2            CKCON &= ~0x0B;                  // T1M = 0; SCA1:0 = 00
 108   2         } 
 109   1         else 
 110   1         {
 111   2            TH1 = -(SYSCLK/BAUDRATE/2/48);
 112   2            CKCON &= ~0x0B;                  // T1M = 0; SCA1:0 = 10
 113   2            CKCON |=  0x02;
 114   2         }
 115   1      
 116   1         TL1 = TH1;                          // init Timer1
 117   1         TMOD &= ~0xf0;                      // TMOD: timer 1 in 8-bit a
C51 COMPILER V8.02   F34X_MSD_UART                 07/24/2007 22:07:38 PAGE 19  

             -utoreload
 118   1         TMOD |=  0x20;
 119   1         TR1 = 1;                            // START Timer1
 120   1         TI0 = 1;                            // Indicate TX0 ready
 121   1      #endif
 122   1              printf("UART INIT"ENDLINE);
 123   1      }
 124          
 125          //----------------------------------------------------------------
             -------------
 126          // key_available
 127          //----------------------------------------------------------------
             -------------
 128          //
 129          // Function returns state of UART receive interrupt flag "RI0"
 130          //
 131          // Parameters   :
 132          // Return Value : TRUE if RI0 flag is set and FALSE if not.
 133          //----------------------------------------------------------------
             -------------
 134          
 135          unsigned char key_available() {
 136   1              return RI0?1:0;
 137   1      }
C51 COMPILER V8.02   F34X_MSD_UART                 07/24/2007 22:07:38 PAGE 20  

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION UART0_Init (BEGIN)
                                           ; SOURCE LINE # 72
                                           ; SOURCE LINE # 74
0000 900000      R     MOV     DPTR,#sbrl
0003 74FF              MOV     A,#0FFH
0005 F0                MOVX    @DPTR,A
0006 A3                INC     DPTR
0007 7430              MOV     A,#030H
0009 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 75
000A 759810            MOV     SCON0,#010H
                                           ; SOURCE LINE # 93
                                           ; SOURCE LINE # 94
                                           ; SOURCE LINE # 95
000D F58D              MOV     TH1,A
                                           ; SOURCE LINE # 96
000F 438E08            ORL     CKCON,#08H
                                           ; SOURCE LINE # 97
                                           ; SOURCE LINE # 98
                                           ; SOURCE LINE # 99
                                           ; SOURCE LINE # 100
                                           ; SOURCE LINE # 101
                                           ; SOURCE LINE # 102
                                           ; SOURCE LINE # 103
                                           ; SOURCE LINE # 104
                                           ; SOURCE LINE # 105
                                           ; SOURCE LINE # 106
                                           ; SOURCE LINE # 107
                                           ; SOURCE LINE # 108
                                           ; SOURCE LINE # 110
                                           ; SOURCE LINE # 111
                                           ; SOURCE LINE # 112
                                           ; SOURCE LINE # 113
                                           ; SOURCE LINE # 114
0012         ?C0002:
                                           ; SOURCE LINE # 116
0012 858D8B            MOV     TL1,TH1
                                           ; SOURCE LINE # 117
0015 53890F            ANL     TMOD,#0FH
                                           ; SOURCE LINE # 118
0018 438920            ORL     TMOD,#020H
                                           ; SOURCE LINE # 119
001B D28E              SETB    TR1
                                           ; SOURCE LINE # 120
001D D299              SETB    TI0
                                           ; SOURCE LINE # 122
001F 7BFF              MOV     R3,#0FFH
0021 7A00        R     MOV     R2,#HIGH ?SC_0
0023 7900        R     MOV     R1,#LOW ?SC_0
0025 020000      E     LJMP    _printf
             ; FUNCTION UART0_Init (END)

             ; FUNCTION key_available (BEGIN)
                                           ; SOURCE LINE # 135
                                           ; SOURCE LINE # 136
0000 309804            JNB     RI0,?C0008
0003 7F01              MOV     R7,#01H
0005 8002              SJMP    ?C0009
0007         ?C0008:
C51 COMPILER V8.02   F34X_MSD_UART                 07/24/2007 22:07:38 PAGE 21  

0007 7F00              MOV     R7,#00H
0009         ?C0009:
                                           ; SOURCE LINE # 137
0009         ?C0010:
0009 22                RET     
             ; FUNCTION key_available (END)

C51 COMPILER V8.02   F34X_MSD_UART                 07/24/2007 22:07:38 PAGE 22  

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


P3 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00B0H  1
size_t . . . . . . . . . . . . . . . .  TYPEDEF  -----  U_INT    -----  2
TMOD . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0089H  1
RI0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0098H  1
TI0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0099H  1
TH1. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   008DH  1
TL1. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   008BH  1
key_available. . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
TR1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008EH  1
UART0_Init . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  sbrl . . . . . . . . . . . . . . . .  AUTO     XDATA  INT      0000H  2
SCON0. . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0098H  1
CKCON. . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   008EH  1
_printf. . . . . . . . . . . . . . . .  EXTERN   CODE   PROC     -----  -----


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     50    ----
   CONSTANT SIZE    =     12    ----
   XDATA SIZE       =   ----       2
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
